// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file LogEntry.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__LOGENTRY_HPP
#define FAST_DDS_GENERATED__LOGENTRY_HPP

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(LOGENTRY_SOURCE)
#define LOGENTRY_DllAPI __declspec( dllexport )
#else
#define LOGENTRY_DllAPI __declspec( dllimport )
#endif // LOGENTRY_SOURCE
#else
#define LOGENTRY_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define LOGENTRY_DllAPI
#endif // _WIN32

/*!
 * @brief This class represents the structure CanLogEntry defined by the user in the IDL file.
 * @ingroup LogEntry
 */
class CanLogEntry
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport CanLogEntry()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~CanLogEntry()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object CanLogEntry that will be copied.
     */
    eProsima_user_DllExport CanLogEntry(
            const CanLogEntry& x)
    {
                    m_index = x.m_index;

                    m_can_id = x.m_can_id;

                    m_value = x.m_value;

                    m_timestamp = x.m_timestamp;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object CanLogEntry that will be copied.
     */
    eProsima_user_DllExport CanLogEntry(
            CanLogEntry&& x) noexcept
    {
        m_index = x.m_index;
        m_can_id = x.m_can_id;
        m_value = x.m_value;
        m_timestamp = x.m_timestamp;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object CanLogEntry that will be copied.
     */
    eProsima_user_DllExport CanLogEntry& operator =(
            const CanLogEntry& x)
    {

                    m_index = x.m_index;

                    m_can_id = x.m_can_id;

                    m_value = x.m_value;

                    m_timestamp = x.m_timestamp;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object CanLogEntry that will be copied.
     */
    eProsima_user_DllExport CanLogEntry& operator =(
            CanLogEntry&& x) noexcept
    {

        m_index = x.m_index;
        m_can_id = x.m_can_id;
        m_value = x.m_value;
        m_timestamp = x.m_timestamp;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x CanLogEntry object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const CanLogEntry& x) const
    {
        return (m_index == x.m_index &&
           m_can_id == x.m_can_id &&
           m_value == x.m_value &&
           m_timestamp == x.m_timestamp);
    }

    /*!
     * @brief Comparison operator.
     * @param x CanLogEntry object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const CanLogEntry& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member index
     * @param _index New value for member index
     */
    eProsima_user_DllExport void index(
            uint32_t _index)
    {
        m_index = _index;
    }

    /*!
     * @brief This function returns the value of member index
     * @return Value of member index
     */
    eProsima_user_DllExport uint32_t index() const
    {
        return m_index;
    }

    /*!
     * @brief This function returns a reference to member index
     * @return Reference to member index
     */
    eProsima_user_DllExport uint32_t& index()
    {
        return m_index;
    }


    /*!
     * @brief This function sets a value in member can_id
     * @param _can_id New value for member can_id
     */
    eProsima_user_DllExport void can_id(
            uint8_t _can_id)
    {
        m_can_id = _can_id;
    }

    /*!
     * @brief This function returns the value of member can_id
     * @return Value of member can_id
     */
    eProsima_user_DllExport uint8_t can_id() const
    {
        return m_can_id;
    }

    /*!
     * @brief This function returns a reference to member can_id
     * @return Reference to member can_id
     */
    eProsima_user_DllExport uint8_t& can_id()
    {
        return m_can_id;
    }


    /*!
     * @brief This function sets a value in member value
     * @param _value New value for member value
     */
    eProsima_user_DllExport void value(
            int32_t _value)
    {
        m_value = _value;
    }

    /*!
     * @brief This function returns the value of member value
     * @return Value of member value
     */
    eProsima_user_DllExport int32_t value() const
    {
        return m_value;
    }

    /*!
     * @brief This function returns a reference to member value
     * @return Reference to member value
     */
    eProsima_user_DllExport int32_t& value()
    {
        return m_value;
    }


    /*!
     * @brief This function sets a value in member timestamp
     * @param _timestamp New value for member timestamp
     */
    eProsima_user_DllExport void timestamp(
            int64_t _timestamp)
    {
        m_timestamp = _timestamp;
    }

    /*!
     * @brief This function returns the value of member timestamp
     * @return Value of member timestamp
     */
    eProsima_user_DllExport int64_t timestamp() const
    {
        return m_timestamp;
    }

    /*!
     * @brief This function returns a reference to member timestamp
     * @return Reference to member timestamp
     */
    eProsima_user_DllExport int64_t& timestamp()
    {
        return m_timestamp;
    }



private:

    uint32_t m_index{0};
    uint8_t m_can_id{0};
    int32_t m_value{0};
    int64_t m_timestamp{0};

};

#endif // _FAST_DDS_GENERATED_LOGENTRY_HPP_


